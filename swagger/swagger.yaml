openapi: 3.0.0
info:
  title: User Management API
  description: A simple CRUD API for managing users.
  version: 1.0.0
servers:
  - url: http://localhost:8000
paths:
  /api/users/create:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: User created successfully
        "400":
          description: Bad request
  /api/users/read:
    get:
      summary: Get all users
      responses:
        "200":
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "500":
          description: No users found
  /api/users/read/{id}:
    get:
      summary: Get a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: User ID
      responses:
        "200":
          description: User details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found
  /api/users/update/{id}:
    put:
      summary: Update a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: User ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdate"
      responses:
        "200":
          description: User updated successfully
        "404":
          description: User not found
        "400":
          description: Bad request
  /api/users/delete/{id}:
    delete:
      summary: Delete a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: User ID
      responses:
        "204":
          description: User deleted successfully
        "404":
          description: User not found

components:
  schemas:
    User:
      type: object
      required:
        - name
        - email
        - address
        - gender
      properties:
        name:
          type: string
        email:
          type: string
        address:
          type: string
        gender:
          type: string
          enum:
            - male
            - female
    UserUpdate:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        address:
          type: string
        gender:
          type: string
          enum:
            - male
            - female
